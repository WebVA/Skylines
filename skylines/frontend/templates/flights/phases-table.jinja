{% macro render_circling_performance(flight) -%}
<table class="table table-condensed">
  <tbody>
    <tr>
      <th></th>
      <th class='numeric'>{% trans %}Thermals{% endtrans %}<br/>{% trans %}Avg. vario{% endtrans %}</th>
      <th class='numeric'>{% trans %}Duration{% endtrans %}<br/>&Delta;H</th>
      <th class='numeric'></th>
      <th class='numeric'></th>
    </tr>
    {% for ph in flight.circling_performance -%}
    {% with phase=phase_formatter(ph) -%}
    <tr>
      <th>{{ phase.circling_direction }}</th>
      <td class='numeric'>{{ phase.count }}<br/>{{ phase.vario }}</td>
      <td class='numeric'><abbr title="{{ phase.fraction }}">{{ phase.duration }}</abbr><br/>{{ phase.alt_diff }}</td>
      <td class='numeric'></td>
      <td class='numeric'></td>
    </tr>
    {%- endwith %}
    {%- endfor %}
  </tbody>
</table>
{%- endmacro %}

{% macro render_cruise_performance(flight) -%}
<table class="table table-condensed">
    {% for ph in flight.cruise_performance -%}
    {% with phase=phase_formatter(ph) -%}
    <tr>
      <th>{% trans %}Duration{% endtrans %}</th>
      <td>{{ phase.duration }} ({{ phase.fraction }})</td>
    </tr>
    <tr>
      <th>&Delta;H</th>
      <td>{{ phase.alt_diff }}</td>
    </tr>
    <tr>
      <th>{% trans %}Distance{% endtrans %}</th>
      <td>{{ phase.distance }}</td>
    </tr>
    <tr>
      <th>{% trans %}Avg. vario{% endtrans %}</th>
      <td>{{ phase.vario }}</td>
    </tr>
    <tr>
      <th>{% trans %}Avg. speed{% endtrans %}</th>
      <td>{{ phase.speed }}</td>
    </tr>
    <tr>
      <th><abbr title="{% trans %}Glide Rate{% endtrans %}">{% trans %}GR{% endtrans %}</abbr></th>
      <td>{{ phase.glide_rate }}</td>
    </tr>
    <tr>
      <th>{% trans %}Glides{% endtrans %}</th>
      <td>{{ phase.count }}</td>
    </tr>
    {%- endwith %}
    {%- endfor %}
  </tbody>
</table>
{%- endmacro %}

{% macro render_leg_statistics(flight, contest_type, trace_type) -%}
{% with legs=leg_formatter(flight, flight.get_contest_legs(contest_type, trace_type)) -%}
{% if legs -%}
<div data-component='flight-leg-table' data-attrs='{
  "headings": {
    "distance": "{% trans %}Dist.{% endtrans %}",
    "duration": "<abbr title=\"{% trans %}Duration{% endtrans %}\">{% trans %}&Delta;t{% endtrans %}",
    "speed": "{% trans %}Avg. speed{% endtrans %}",
    "climbPercentage": "{% trans %}Climb %{% endtrans %}",
    "vario": "{% trans %}Avg. vario{% endtrans %}",
    "glideRate": "<abbr title=\"{% trans %}Glide Rate while cruising{% endtrans %}\">{% trans %}GR{% endtrans %}</abbr>"
  },
  "legs": [
    {% for leg in legs -%}
    {
      "num": {{loop.index}},
      "distance": "{{leg.distance}}",
      "start": {{leg.start_time_of_day}},
      "duration": {
        "seconds": {{leg.duration.total_seconds()}},
        "text": "{{leg.duration}}"
      },
      "speed": "{{leg.speed}}",
      "climbPercentage": "{{leg.climb_percentage}}",
      "vario": "{{leg.climbrate}}",
      "glideRate": "{{leg.glide_rate}}"
    }{%if not loop.last%},{%endif%}
    {%- endfor %}
  ]
}'></div>
{%- else %}
{% trans %}No data found...{% endtrans %}
{%- endif %}
{%- endwith %}
{%- endmacro %}


{% macro render_phases(flight) -%}
<div data-component='flight-phase-table' data-attrs='{
  "headings": {
    "start": "{% trans %}Start{% endtrans %}",
    "duration": "{% trans %}Duration{% endtrans %}",
    "altDiff": "&Delta;H<br />[{{ h.get_setting_name('altitude_unit', fallback=True) }}]",
    "distance": "{% trans %}Dist.{% endtrans %}<br />[{{ h.get_setting_name('distance_unit', fallback=True) }}]",
    "vario": "{% trans %}Avg. vario{% endtrans %}<br />[{{ h.get_setting_name('lift_unit', fallback=True) }}]",
    "speed": "{% trans %}Avg. speed{% endtrans %}<br />[{{ h.get_setting_name('speed_unit', fallback=True) }}]",
    "glideRate": "<abbr title=\"{% trans %}Glide Rate{% endtrans %}\">{% trans %}GR{% endtrans %}</abbr>"
  },
  "phases": [
    {% with takeoff_midnight=flight.takeoff_time.replace(hour=0, minute=0, second=0, microsecond=0) -%}
    {% for ph in flight.phases -%}
    {% with phase=phase_formatter(ph) -%}
    {
      "isCircling": {{phase.is_circling|tojson}},
      "circlingDirection": "{{phase.circling_direction}}",
      "isCirclingLeft": {{phase.circling_direction_left|tojson}},
      "isCirclingRight": {{phase.circling_direction_right|tojson}},
      "isPowered": {{phase.is_powered|tojson}},
      "type": "{{phase.type}}",
      "start": {
        "seconds": {{(ph.start_time - takeoff_midnight).total_seconds()}},
        "text": "{{phase.start}}"
      },
      "duration": {
        "seconds": {{ph.duration.total_seconds()}},
        "text": "{{phase.duration}}"
      },
      "altDiff": "{{phase.alt_diff_number}}",
      "distance": "{{phase.distance_number}}",
      "vario": "{{phase.vario_number}}",
      "speed": "{{phase.speed_number}}",
      "glideRate": "{{phase.glide_rate}}"
    }{%if not loop.last%},{%endif%}
    {%- endwith %}
    {%- endfor %}
    {%- endwith %}
  ]
}'></div>
{%- endmacro %}
